---

description: Build, tag and push Docker image for cross platform
 to remote registry [AWS ECR].

parameters:
  registry_provider:
    type: enum
    enum: ["aws", "docker"]
    default: "aws"
    description: Docker registry provider.
  configure_git:
    type: boolean
    default: false
    description: Whether to setup git credentials.
  image_context:
    type: string
    default: "."
    description: Docker local build context.
  image_file:
    type: string
    default: ""
    description: Docker local Dockerfile.
  image_platform:
    type: string
    default: ""
    description: Docker image platform.
  image_name:
    type: string
    description: Docker local image name.
  image_tag:
    type: string
    description: Docker remote image tag.
  slack_alert:
    type: boolean
    default: true
    description: Whether to send a Slack on failure.
  tag_only:
    type: boolean
    default: false
    description: Whether to tag the Docker image only.

steps:
  - docker_install_cli
  - docker_configure_repo:
      registry_provider: << parameters.registry_provider >>
  - run:
      name: Set Docker registry provider
      command: |
        if [ "<< parameters.registry_provider >>" = "aws" ]; then
          echo 'export NOOSINV_DOCKER_REPO=$AWS_ECR_URL' >> $BASH_ENV
        elif [ "<< parameters.registry_provider >>" = "docker" ]; then
          echo 'export NOOSINV_DOCKER_REPO=$DOCKERHUB_USER' >> $BASH_ENV
        fi
  - run:
      name: Set Github token
      command: |
        if "<< parameters.configure_git >>"; then
          echo 'export NOOSINV_DOCKER_ARG=GITHUB_TOKEN' >> $BASH_ENV
        fi
  - run:
      name: Create and use buildx builder
      command: |
        docker buildx create --name multi-platform-builder --use
        docker buildx inspect --bootstrap
  - run:
      name: Tag and push Docker image
      command: noosinv docker.buildx
        --context << parameters.image_context >>
        --name << parameters.image_name >>
        $(if [ -n "<< parameters.image_file >>" ];
        then echo "--file << parameters.image_file >>"; fi)
        $(if [ -n "<< parameters.image_platform >>" ];
        then echo "--platform << parameters.image_platform >>"; fi)
        --tag << parameters.image_tag >>
        $(if << parameters.tag_only >>; then echo "--tag-only"; fi)
  - when:
      condition: << parameters.slack_alert >>
      steps:
        - slack-msg/notify:
            event: fail
            template: basic_fail_1
