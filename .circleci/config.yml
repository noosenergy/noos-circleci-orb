---
version: 2.1

# ----------------
# Orbs declaration
# ----------------

orbs:

  noos-ci: noosenergy/noos-ci@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@10.0.3

parameters:

  # Parameters required by orb-tools
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    default: "dev:beta"


# --------------
# Pipeline tasks
# --------------

jobs:

  integration-test_python-lint-package:
    executor: noos-ci/default
    steps:
      - checkout
      - run:
          name: Copy fixtures files over
          command: cp -R ./fixtures/python/* .
      - noos-ci/python-lint-package:
          pkg-manager: pipenv
          install-args: "--dev"
          configure-git: false
          src-directory: "./src"

  integration-test_python-test-package:
    executor: noos-ci/default
    steps:
      - checkout
      - run:
          name: Copy fixtures files over
          command: cp -R ./fixtures/python/* .
      - noos-ci/python-test-package:
          pkg-manager: pipenv
          install-args: "--dev"
          configure-git: false
          tests-directory: "./src/tests"

  integration-test_python-build-wheel:
    executor: noos-ci/default
    steps:
      - checkout
      - run:
          name: Copy fixtures files over
          command: cp -R ./fixtures/python/* .
      - noos-ci/python-build-wheel:
          pkg-manager: pipenv
          install-args: "--dev"
          configure-git: false

  integration-test_helm-lint-chart:
    executor: noos-ci/default
    steps:
      - checkout
      - noos-ci/helm-lint-chart:
          chart-directory: ./fixtures/helm

  integration-test_helm-build-chart:
    executor: noos-ci/default
    steps:
      - checkout
      - noos-ci/helm-build-chart:
          chart-directory: ./fixtures/helm

  integration-test_docker-build-image:
    executor: noos-ci/default
    steps:
      - checkout
      - noos-ci/docker-build-image:
          registry-provider: docker
          configure-git: false
          image-context: ./fixtures/docker
          image-name: busybox
          image-tag: ${CIRCLE_SHA1}

  integration-test_terraform-run-plan:
    executor: noos-ci/default
    steps:
      - checkout
      - noos-ci/terraform-update-variable:
          workspace: noos-prod
          variable-name: noos_ci_integration_test
          variable-value: ${CIRCLE_SHA1}
      - noos-ci/terraform-run-plan:
          workspace: noos-prod
          plan-message: ${CIRCLE_BUILD_URL}


# -----------------
# Pipeline workflow
# -----------------

# https://circleci.com/docs/2.0/creating-orbs/#integration-test_deploy
# https://circleci.com/developer/orbs/orb/circleci/orb-tools

workflows:

  # This workflow will run on every commit
  lint-build:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint
      - orb-tools/pack
      - approve-for-testing:
          type: approval
          requires:
            - orb-tools/pack
            - orb-tools/lint
      # Release dev version of orb, for testing & possible publishing.
      - orb-tools/publish-dev:
          orb-name: noosenergy/noos-ci
          context: CIRCLECI_ORB_SHARED
          requires:
            - approve-for-testing
      # Trigger an integration workflow to test the version of your orb.
      - orb-tools/trigger-integration-tests-workflow:
          context: CIRCLECI_ORB_SHARED
          requires:
            - orb-tools/publish-dev

  # This workflow will only be triggered by the "trigger-integration-tests-workflow" job.
  test:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - integration-test_python-lint-package
      - integration-test_python-test-package
      - integration-test_python-build-wheel
      - integration-test_helm-lint-chart
      - integration-test_helm-build-chart:
          context: CIRCLECI_SHARED
      - integration-test_docker-build-image:
          context: CIRCLECI_SHARED
      - integration-test_terraform-run-plan:
          context: NOOS_PROD_SHARED

  # Promote dev to prod version based onto a git tag version.
  publish:
    jobs:
      - approve-for-publishing:
          type: approval
          filters:
            tags:
              # ONLY git tag compliant format: e.g. `major-release-1.0.0`
              only: /^(major|minor|patch)-release-v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - orb-tools/dev-promote-prod-from-git-tag:
          orb-name: noosenergy/noos-ci
          add-pr-comment: false
          context: CIRCLECI_ORB_SHARED
          requires:
            - approve-for-publishing
          filters:
            tags:
              only: /^(major|minor|patch)-release-v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
