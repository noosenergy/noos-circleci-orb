---
version: 2.1

# ----------------
# Orbs declaration
# ----------------

orbs:

  noos: noosenergy/noos-ci@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@10.0.3

parameters:

  # Parameters required by orb-tools
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    default: "dev:alpha"


# --------------
# Pipeline tasks
# --------------

jobs:

  integration-test_install-cli:
    executor: noos/default
    steps:
      - checkout
      - noos/install-cli
      - run:
          name: Print noos-ci version
          command: noosci --version

  integration-test_docker-install-cli:
    executor: noos/default
    steps:
      - checkout
      - noos/docker-install-cli
      - run:
          name: Print helm version
          command: docker --version

  integration-test_docker-configure-repo-aws:
    executor: noos/default
    steps:
      - checkout
      - noos/install-cli
      - noos/docker-install-cli
      - noos/docker-configure-repo:
          registry-provider: aws

  integration-test_docker-configure-repo-docker:
    executor: noos/default
    steps:
      - checkout
      - noos/install-cli
      - noos/docker-install-cli
      - noos/docker-configure-repo:
          registry-provider: docker

  integration-test_helm-install-cli:
    executor: noos/default
    steps:
      - checkout
      - noos/helm-install-cli
      - run:
          name: Print helm version
          command: helm version --short

  integration-test_helm-configure-repo:
    executor: noos/default
    steps:
      - checkout
      - noos/install-cli
      - noos/helm-install-cli
      - noos/helm-configure-repo

  integration-test_helm-lint-chart:
    executor: noos/default
    steps:
      - checkout
      - noos/helm-lint-chart:
          chart-directory: ./fixtures/helm

  integration-test_py-install-venv:
    executor: noos/default
    steps:
      - checkout
      - run:
          name: Copy pip files over
          command: cp -R ./fixtures/py/* .
      - noos/py-install-venv:
          configure-git: false
      - run:
          name: Print pip packages
          command: pipenv run pip list


# -----------------
# Pipeline workflow
# -----------------

# https://circleci.com/docs/2.0/creating-orbs/#integration-test_deploy
# https://circleci.com/developer/orbs/orb/circleci/orb-tools

workflows:

  # This workflow will run on every commit
  lint-approve-build:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint
      - orb-tools/pack
      - approve-for-testing:
          type: approval
          requires:
            - orb-tools/pack
            - orb-tools/lint

      # Release dev version of orb, for testing & possible publishing.
      - orb-tools/publish-dev:
          orb-name: noosenergy/noos-ci
          context: CIRCLECI_ORB_SHARED
          requires:
            - approve-for-testing

      # Trigger an integration workflow to test the version of your orb.
      - orb-tools/trigger-integration-tests-workflow:
          context: CIRCLECI_ORB_SHARED
          requires:
            - orb-tools/publish-dev

  # This workflow will only be triggered by the "trigger-integration-tests-workflow" job.
  test-publish:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - integration-test_install-cli
      - integration-test_docker-install-cli
      - integration-test_docker-configure-repo-aws:
          context: CIRCLECI_SHARED
      - integration-test_docker-configure-repo-docker:
          context: CIRCLECI_SHARED
      - integration-test_helm-install-cli
      - integration-test_helm-configure-repo:
          context: CIRCLECI_SHARED
      - integration-test_helm-lint-chart
      - integration-test_py-install-venv

      # Promote dev to prod version based onto a git tag version.
      - orb-tools/dev-promote-prod-from-git-tag:
          orb-name: noosenergy/noos-ci
          add-pr-comment: false
          context: CIRCLECI_ORB_SHARED
          requires:
            - integration-test_install-cli
            - integration-test_docker-install-cli
            - integration-test_docker-configure-repo-aws
            - integration-test_docker-configure-repo-docker
            - integration-test_helm-install-cli
            - integration-test_helm-configure-repo
            - integration-test_helm-lint-chart
            - integration-test_py-install-venv
          filters:
            tags:
              # ONLY git tag compliant format: e.g. `major-release-1.0.0`
              only: /^(major|minor|patch)-release-v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
